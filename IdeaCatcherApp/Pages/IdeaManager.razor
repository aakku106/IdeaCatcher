@page "/ideas"
@inject IIdeaStorageService StorageService

<div class="idea-manager">
    <div class="folders-panel">
        <h3>Folders</h3>
        <div class="new-folder">
            <input @bind="newFolderName" placeholder="New folder name" />
            <button @onclick="CreateFolder">Create</button>
        </div>

        @foreach (var folder in folders)
        {
            <div class="folder @(selectedFolder?.Id == folder.Id ? "selected" : "")" @onclick="() => SelectFolder(folder)">
                @folder.Name
            </div>
        }
    </div>

    <div class="notes-panel">
        @if (selectedFolder != null)
        {
            <h3>Notes in @selectedFolder.Name</h3>
            <div class="new-note">
                <input @bind="newNoteTitle" placeholder="Note title" />
                <button @onclick="CreateNote">Add Note</button>
            </div>

            @foreach (var note in selectedFolder.Notes)
            {
                <div class="note">
                    <h4>@note.Title</h4>
                    <textarea @bind="note.Content" @bind:event="oninput"></textarea>
                </div>
            }
        }
    </div>
</div>

@code {
    private List<IdeaFolder> folders = new();
    private IdeaFolder? selectedFolder;
    private string newFolderName = "";
    private string newNoteTitle = "";

    protected override async Task OnInitializedAsync()
    {
        folders = await StorageService.GetFoldersAsync();
    }

    private async Task CreateFolder()
    {
        if (string.IsNullOrWhiteSpace(newFolderName)) return;

        await StorageService.CreateFolderAsync(newFolderName);
        folders = await StorageService.GetFoldersAsync();
        newFolderName = "";
    }

    private void SelectFolder(IdeaFolder folder)
    {
        selectedFolder = folder;
    }

    private async Task CreateNote()
    {
        if (selectedFolder == null || string.IsNullOrWhiteSpace(newNoteTitle)) return;

        var note = new IdeaNote { Title = newNoteTitle };
        await StorageService.AddNoteToFolderAsync(selectedFolder.Id, note);
        folders = await StorageService.GetFoldersAsync();
        selectedFolder = folders.First(f => f.Id == selectedFolder.Id);
        newNoteTitle = "";
    }

    private async Task SaveChanges()
    {
        await StorageService.SaveChangesAsync();
    }
}