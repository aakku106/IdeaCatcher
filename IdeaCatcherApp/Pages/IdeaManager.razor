@page "/ideas"
@using IdeaCatcherApp.Components
@inject IIdeaStorageService StorageService

<div class="idea-manager">
    <div class="folders-panel">
        <h3>Folders</h3>
        <div class="new-folder">
            <input @bind="newFolderName" placeholder="New folder name" />
            <button class="action-button" @onclick="CreateFolder">
                <span>+</span>
                Create
            </button>
        </div>

        @foreach (var folder in folders)
        {
            <div class="folder @(selectedFolder?.Id == folder.Id ? "selected" : "")" @onclick="() => SelectFolder(folder)">
                @folder.Name
            </div>
        }
    </div>

    <div class="notes-panel">
        @if (selectedFolder != null)
        {
            <h3>Notes in @selectedFolder.Name</h3>
            <div class="new-note">
                <input @bind="newNoteTitle" placeholder="Note title" />
                <button class="action-button" @onclick="CreateNote">
                    <span>+</span>
                    Add Note
                </button>
            </div>

            @foreach (var note in selectedFolder.Notes)
            {
                <div class="note @(selectedNote?.Id == note.Id ? "selected" : "")" @onclick="() => SelectNote(note)">
                    <h4>@note.Title</h4>
                </div>
            }
        }
    </div>

    <div class="editor-panel @(selectedNote != null ? "visible" : "")">
        @if (selectedNote != null)
        {
            <NoteEditor Note="@selectedNote" OnSave="SaveNote" />
        }
    </div>
</div>

@code {
    private List<IdeaFolder> folders = new();
    private IdeaFolder? selectedFolder;
    private IdeaNote? selectedNote;
    private string newFolderName = "";
    private string newNoteTitle = "";

    protected override async Task OnInitializedAsync()
    {
        folders = await StorageService.GetFoldersAsync();
    }

    private async Task CreateFolder()
    {
        if (!string.IsNullOrWhiteSpace(newFolderName))
        {
            var folder = new IdeaFolder { Name = newFolderName };
            folders.Add(folder);
            await StorageService.SaveFoldersAsync(folders);
            newFolderName = "";
        }
    }

    private void SelectFolder(IdeaFolder folder)
    {
        selectedFolder = folder;
        selectedNote = null;
    }

    private async Task CreateNote()
    {
        if (selectedFolder != null && !string.IsNullOrWhiteSpace(newNoteTitle))
        {
            var note = new IdeaNote { Title = newNoteTitle };
            selectedFolder.Notes.Add(note);
            await StorageService.SaveFoldersAsync(folders);
            newNoteTitle = "";
        }
    }

    private void SelectNote(IdeaNote note)
    {
        selectedNote = note;
    }

    private async Task SaveNote(IdeaNote note)
    {
        if (selectedFolder != null)
        {
            var index = selectedFolder.Notes.FindIndex(n => n.Id == note.Id);
            if (index != -1)
            {
                selectedFolder.Notes[index] = note;
                await StorageService.SaveFoldersAsync(folders);
            }
        }
    }
}